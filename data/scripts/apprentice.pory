const LOCALID_APPRENTICE = 6

script BattleFrontier_BattleTowerLobby_EventScript_Apprentice {
    lock
    faceplayer
    apprentice_gavelvlmode
    if (!var(VAR_RESULT)) {
        apprentice_buff(0, APPRENTICE_BUFF_NAME)
        apprentice_msg(FALSE, APPRENTICE_MSG_PLEASE_TEACH)
        // It's impossible to fully reject an Apprentice, they just keep asking for you to teach them.
        apprentice_menu(APPRENTICE_ASK_YES_NO)
        while (var(VAR_RESULT) == 1) {
            apprentice_msg(FALSE, APPRENTICE_MSG_REJECT)
            apprentice_menu(APPRENTICE_ASK_YES_NO)
        }
        apprentice_msg(FALSE, APPRENTICE_MSG_WHICH_LVL_MODE)
        apprentice_menu(APPRENTICE_ASK_WHICH_LEVEL)
        apprentice_setlvlmode(VAR_RESULT)
        apprentice_shufflespecies
        apprentice_buff(0, APPRENTICE_BUFF_LEVEL)
        apprentice_msg(TRUE, APPRENTICE_MSG_THANKS_LVL_MODE)
        call(Apprentice_EventScript_SetHideFlags)
        release
        releaseall
        switch (var(VAR_FACING)) {
            case DIR_NORTH:
                goto(Apprentice_EventScript_LeaveNorth)
            default:
                goto(Apprentice_EventScript_Leave)
        }
    } else {
        if (flag(FLAG_DAILY_APPRENTICE_LEAVES)) {
            release
            releaseall
            end
        }
        apprentice_getquestion
        if (var(VAR_RESULT) == APPRENTICE_QUESTION_WHICH_MON) {
            apprentice_initquestion(APPRENTICE_QUESTION_WHICH_MON)
            apprentice_buff(0, APPRENTICE_BUFF_SPECIES1)
            apprentice_buff(1, APPRENTICE_BUFF_SPECIES2)
            apprentice_msg(FALSE, APPRENTICE_MSG_WHICH_MON)
            apprentice_menu(APPRENTICE_ASK_2SPECIES)
            copyvar(VAR_0x8005, VAR_RESULT)
            if (var(VAR_0x8005) == 0) {
                setvar(VAR_0x8007, APPRENTICE_BUFF_SPECIES1)
            } elif (var(VAR_0x8005) == 1) {
                setvar(VAR_0x8007, APPRENTICE_BUFF_SPECIES2)
            }
            apprentice_getnumpartymons
            apprentice_setpartymon(VAR_RESULT)
            apprentice_answeredquestion
            apprentice_getnumpartymons
            if (var(VAR_RESULT) == MULTI_PARTY_SIZE) {
                apprentice_randomizequestions
            }
            apprentice_buff(0, VAR_0x8007)
            apprentice_freequestion
            apprentice_msg(TRUE, APPRENTICE_MSG_THANKS_MON)
            call(Apprentice_EventScript_SetHideFlags)
            release
            releaseall
            switch (var(VAR_FACING)) {
                case DIR_NORTH:
                    goto(Apprentice_EventScript_LeaveNorth)
                default:
                    goto(Apprentice_EventScript_Leave)
            }
        } elif (var(VAR_RESULT) == APPRENTICE_QUESTION_WHAT_ITEM) {
            apprentice_initquestion(APPRENTICE_QUESTION_WHAT_ITEM)
            apprentice_buff(0, APPRENTICE_BUFF_SPECIES3)
            apprentice_msg(TRUE, APPRENTICE_MSG_WHAT_HELD_ITEM)
            apprentice_freequestion
            do {
                fadescreen(FADE_TO_BLACK)
                setvar(VAR_RESULT, 0)
                apprentice_openbag
                if (var(VAR_RESULT) == FALSE) {
                    apprentice_initquestion(APPRENTICE_QUESTION_WHAT_ITEM)
                    apprentice_buff(0, APPRENTICE_BUFF_SPECIES3)
                    apprentice_msg(FALSE, APPRENTICE_MSG_HOLD_NOTHING)
                    apprentice_menu(APPRENTICE_ASK_GIVE)
                    apprentice_freequestion
                } else {
                    apprentice_trysetitem
                    if (var(VAR_RESULT) == FALSE) {
                        // Because Battle Tower mons may not hold the same item, the player must suggest a
                        // different item if they've already told the Apprentice to use it for another mon.
                        apprentice_initquestion(APPRENTICE_QUESTION_WHAT_ITEM)
                        apprentice_buff(0, APPRENTICE_BUFF_ITEM)
                        apprentice_buff(1, APPRENTICE_BUFF_SPECIES3)
                        apprentice_msg(FALSE, APPRENTICE_MSG_ITEM_ALREADY_SUGGESTED)
                        apprentice_menu(APPRENTICE_ASK_GIVE)
                        apprentice_freequestion
                    } else {
                        apprentice_buff(0, APPRENTICE_BUFF_ITEM)
                        apprentice_msg(TRUE, APPRENTICE_MSG_THANKS_HELD_ITEM)
                        apprentice_answeredquestion
                        call(Apprentice_EventScript_SetHideFlags)
                        release
                        releaseall
                        switch (var(VAR_FACING)) {
                            case DIR_NORTH:
                                goto(Apprentice_EventScript_LeaveNorth)
                            default:
                                goto(Apprentice_EventScript_Leave)
                        }
                    }
                }
            } while(var(VAR_RESULT) == 0)
            apprentice_msg(TRUE, APPRENTICE_MSG_THANKS_NO_HELD_ITEM)
            apprentice_answeredquestion
            call(Apprentice_EventScript_SetHideFlags)
            release
            releaseall
            switch (var(VAR_FACING)) {
                case DIR_NORTH:
                    goto(Apprentice_EventScript_LeaveNorth)
                default:
                    goto(Apprentice_EventScript_Leave)
            }
        } elif (var(VAR_RESULT) == APPRENTICE_QUESTION_WHICH_MOVE) {
            apprentice_initquestion(APPRENTICE_QUESTION_WHICH_MOVE)
            apprentice_buff(0, APPRENTICE_BUFF_SPECIES3)
            apprentice_buff(1, APPRENTICE_BUFF_MOVE1)
            apprentice_buff(2, APPRENTICE_BUFF_MOVE2)
            apprentice_msg(FALSE, APPRENTICE_MSG_WHICH_MOVE)
            apprentice_menu(APPRENTICE_ASK_MOVES)
            copyvar(VAR_0x8005, VAR_RESULT)
            if (var(VAR_0x8005) == 0) {
                setvar(VAR_0x8007, APPRENTICE_BUFF_MOVE1)
            } elif (var(VAR_0x8005) == 0) {
                setvar(VAR_0x8007, APPRENTICE_BUFF_MOVE2)
            }
            apprentice_setmove
            apprentice_answeredquestion
            apprentice_buff(0, VAR_0x8007)
            apprentice_freequestion
            apprentice_msg(TRUE, APPRENTICE_MSG_THANKS_MOVE)
            call(Apprentice_EventScript_SetHideFlags)
            release
            releaseall
            switch (var(VAR_FACING)) {
                case DIR_NORTH:
                    goto(Apprentice_EventScript_LeaveNorth)
                default:
                    goto(Apprentice_EventScript_Leave)
            }
        } elif (var(VAR_RESULT) == APPRENTICE_QUESTION_WHICH_FIRST) {
            apprentice_msg(FALSE, APPRENTICE_MSG_WHICH_MON_FIRST)
            apprentice_menu(APPRENTICE_ASK_3SPECIES)
            apprentice_setleadmon(VAR_RESULT)
            apprentice_answeredquestion
            apprentice_buff(0, APPRENTICE_BUFF_LEAD_MON_SPECIES)
            apprentice_msg(TRUE, APPRENTICE_MSG_THANKS_MON_FIRST)
            call(Apprentice_EventScript_SetHideFlags)
            release
            releaseall
            switch (var(VAR_FACING)) {
                case DIR_NORTH:
                    goto(Apprentice_EventScript_LeaveNorth)
                default:
                    goto(Apprentice_EventScript_Leave)
            }
        } elif (var(VAR_RESULT) == APPRENTICE_QUESTION_WIN_SPEECH) {
            apprentice_msg(TRUE, APPRENTICE_MSG_PICK_WIN_SPEECH)
            apprentice_shiftsaved
            setvar(VAR_0x8004, EASY_CHAT_TYPE_APPRENTICE)
            call(Common_ShowEasyChatScreen)
            lock
            faceplayer
            apprentice_save
            apprentice_buff(0, APPRENTICE_BUFF_WIN_SPEECH)
            apprentice_msg(TRUE, APPRENTICE_MSG_THANKS_WIN_SPEECH)
            apprentice_reset
            call(Apprentice_EventScript_SetHideFlags)
            release
            releaseall
            switch (var(VAR_FACING)) {
                case DIR_NORTH:
                    goto(Apprentice_EventScript_LeaveNorth)
                default:
                    goto(Apprentice_EventScript_Leave)
            }
        }
    }
    release
    releaseall
}

script Apprentice_EventScript_SetHideFlags {
    setflag(FLAG_HIDE_APPRENTICE)
    setflag(FLAG_DAILY_APPRENTICE_LEAVES)
}

script Apprentice_EventScript_LeaveNorth {
    applymovement(LOCALID_APPRENTICE, Apprentice_Movement_LeaveNorth)
    waitmovement(0)
    applymovement(LOCALID_APPRENTICE, Apprentice_Movement_Leave)
    waitmovement(0)
}

script Apprentice_EventScript_Leave {
    applymovement(LOCALID_APPRENTICE, Apprentice_Movement_Leave)
    waitmovement(0)
}

movement Apprentice_Movement_LeaveNorth {
    walk_fast_right
}

movement Apprentice_Movement_Leave {
    walk_fast_down * 2
    walk_fast_right * 9
    set_invisible
    slide_down * 3
}
